<?php
/**
 * @var \PersonalizeAI\FotoAnalyzeTool\Block\BetaFaceTool $block
 *  @var \Magento\Framework\Escaper $escaper
**/
?>
<?php if($block->getModuleStatus()): ?>
<h3>Personalize by picture</h3>
<?php if (!$block->isLoggedIn()): ?>
    <p>Upload a picture of yourself, we personlize on your appearance.</p>
<?php elseif ($block->isLoggedIn() && $block->getFacebookProfilePicUrl()): ?>
    <p>Upload a picture of yourself, we personlize on your appearance. When you don't upload a photo we use your Facebook profile picture</p>
<?php else: ?>
    <p>Upload a picture of yourself, we personlize on your appearance. Or link your Facebook so we can use your Facebook profile picture</p>
<?php endif; ?>
<input id="file" type="file"><br/>
<button class="foto-analyze-button" onclick="analyzeFacebookProfilePic()">Analyze your picture</button>
<div id="result"></div>

<br/>
<?php endif; ?>
<script>
    async function analyzeFacebookProfilePic() {
        const imageInput = document.getElementById('file'); 
        const facebookUrl = "<?= $escaper->escapeJs($block->getFacebookProfilePicUrl()); ?>";
        let base64Image = "";

        if (imageInput.files[0]) {
            base64Image = await readFileAsBase64(imageInput.files[0])
        } else if (facebookUrl) {
            profilePicUrl = facebookUrl;
            // Haal het profielafbeelding op als blob
            const response = await fetch(profilePicUrl);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const blob = await response.blob();
            const file = new File([blob], 'profile_picture.jpg', { type: blob.type });

            // Lees de afbeelding als base64
            base64Image = await readFileAsBase64(file);
        } else {
            document.getElementById('result').innerHTML = 'You did not linked your Facebook, or the file you uploaded could not be readed.';
            return;
        }

        try {
            const apiResponse = await fetch('https://www.betafaceapi.com/api/v2/media', {
                method: 'POST',
                headers: {
                    'Authorization': 'Basic d45fd466-51e2-4701-8da8-04351c872236', // Vervang met je echte API sleutel
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    api_key: "d45fd466-51e2-4701-8da8-04351c872236", // Vervang met je echte API sleutel
                    file_base64: base64Image,
                    detection_flags: 'classifiers,extended'
                })
            });

            if (!apiResponse.ok) {
                throw new Error(`HTTP error! status: ${apiResponse.status}`);
            }

            const data = await apiResponse.json();
            document.getElementById('result').innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
        } catch (error) {
            console.error('Fout:', error);
            document.getElementById('result').innerHTML = 'Er is een fout opgetreden bij het analyseren van de afbeelding.';
        }
    }

    function readFileAsBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onload = () => resolve(reader.result.split(',')[1]);
            reader.onerror = error => reject(error);
            reader.readAsDataURL(file);
        });
    }
</script>

